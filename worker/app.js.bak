var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');
var mongoose = require('mongoose');
var dbUrl = 'mongodb://localhost/node-share';

// var task = require('./app/controllers/kue_tasks');
// var kue = require('kue'),
//     queue = kue.createQueue();

var routes = require('./routes/index');
var users = require('./routes/users');

var app = express();

// connect  to mongodb
mongoose.connect(dbUrl);


// view engine setup
app.set('views', path.join(__dirname, './app/views'));
app.set('view engine', 'jade');

// uncomment after placing your favicon in /public
//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

app.use('/', routes);
app.use('/users', users);

// catch 404 and forward to error handler
app.use(function(req, res, next) {
    var err = new Error('Not Found');
    err.status = 404;
    next(err);
});

// error handlers

// development error handler
// will print stacktrace
if (app.get('env') === 'development') {
    app.use(function(err, req, res, next) {
        res.status(err.status || 500);
        res.render('error', {
            message: err.message,
            error: err
        });
    });
}

// production error handler
// no stacktraces leaked to user
app.use(function(err, req, res, next) {
    res.status(err.status || 500);
    res.render('error', {
        message: err.message,
        error: {}
    });
});

// kue处理任务

// queue.process('task', function(job, done) {
//     console.log('\n\n\n\n\n\n我开始执行啦！！！：');
//     // console.log(job);
//     postVedio(job, done);
// });

// function isOk(status) {
//     return status == 0 ? true : false;
// }

// function postVedio(job, done) {
//     if (!isOk(job.data.vstatus)) {
//         //done('invalid to address') is possible but discouraged 
//         return done(new Error('invalid to postVideo'));
//     }
//     var channelNum = job.data.channel;
//     switch (channelNum) {
//         case 1:
//             {
//                 var youkuContent = job.data;
//                 task.youku(youkuContent);
//                 break;
//             }
//         // case 2:
//         //     {
//         //         var souhuContent = job.data;
//         //         task.souhu(souhuContent);
//         //         break;
//         //     }
//         // case 3:
//         //     {
//         //         var qqvideoContent = job.data;
//         //         task.qqvideo(qqvideoContent);
//         //         break;
//         //     }
//         // case 4:
//         //     {
//         //         var omqqContent = job.data;
//         //         task.omqq(omqqContent);
//         //         break;
//         //     }
//             dafault: {
//                 break;
//             }
//     }
//     // postVedio stuff... 
//     console.log('我执行成功啦');
//     done();
// }



module.exports = app;
